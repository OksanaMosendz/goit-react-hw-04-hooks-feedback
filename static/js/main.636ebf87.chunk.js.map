{"version":3,"sources":["components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App.jsx","index.js"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Button","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Section","title","children","App","state","leaveFeedback","setState","prevState","this","positiveFeedbackPercentage","Math","round","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEaA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,4BAAIA,KCDAC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACtD,OACE,+BACE,uCACO,+BAAOJ,OAEd,0CACU,+BAAOC,OAEjB,sCACM,+BAAOC,OAEb,wCACQ,+BAAOC,OAEf,oDACoB,iCAAOC,EAAP,c,OChBbC,E,KAASC,EAAOC,OAAV,mDCANC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,cAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACGA,GADwBA,OCFlBG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,oCACE,6BAAKD,IACJC,MCAMC,EAAb,4MACEC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEkB,cAAgB,SAAAR,GACd,EAAKS,UAAS,SAAAC,GAAS,sBAAQV,EAASU,EAAUV,GAAU,OARhE,wDAWE,WACE,MAA+BW,KAAKJ,MACpC,OADA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,MAZ3B,6CAgBE,WACE,IAAQF,EAASuB,KAAKJ,MAAdnB,KACFwB,EAA6BC,KAAKC,MAAc,IAAP1B,EAAcuB,KAAKI,sBAClE,OAAOH,GAA0D,MAnBrE,oBAsBE,WACE,MAA+BD,KAAKJ,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBP,QAASmB,OAAOC,KAAKN,KAAKJ,OAAQT,gBAAiBa,KAAKH,kBAG1EG,KAAKI,qBACJ,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKI,qBACZvB,mBAAoBmB,KAAKO,sCAI7B,cAAC,EAAD,CAAchC,QAAQ,6BA1ChC,GAAyBiC,IAAMC,WCF/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.636ebf87.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        Good:<span>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral:<span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad:<span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total:<span>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive feedback:<span>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  margin-right: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from './FeedbackOptions.styled';\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <Button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </Button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\nimport { Notification } from './Notification/Notification';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\n\nexport class App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const positiveFeedbackPercentage = Math.round((good * 100) / this.countTotalFeedback());\n    return positiveFeedbackPercentage ? positiveFeedbackPercentage : '0';\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.leaveFeedback} />\n        </Section>\n\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}